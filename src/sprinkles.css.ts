import { createAtomicStyles, createAtomsFn } from "@vanilla-extract/sprinkles";
import { vars, responsive } from "./theme.css";

const borderWidth = {
  0: "0px",
  1: "1px",
  2: "2px",
  4: "4px",
  8: "8px",
};

const responsiveStyles = createAtomicStyles({
  conditions: {
    default: {},
    sm: { "@media": `screen and (min-width: ${responsive.sm})` },
    md: { "@media": `screen and (min-width: ${responsive.md})` },
    lg: { "@media": `screen and (min-width: ${responsive.lg})` },
    xl: { "@media": `screen and (min-width: ${responsive.xl})` },
    "2xl": { "@media": `screen and (min-width: ${responsive["2xl"]})` },
  },
  defaultCondition: "default",
  properties: {
    position: ["absolute", "relative", "fixed", "sticky"],
    display: ["none", "flex", "inline-flex", "block", "inline"],
    flexDirection: ["row", "column"],
    flexShrink: [0],
    gap: vars.space,
    fontSize: {
      xs: "0.75rem",
      sm: "0.875rem",
      base: "1rem",
      lg: "1.125rem",
      xl: "1.25rem",
      "2xl": "1.5rem",
      "3xl": "1.875rem",
      "4xl": "2.25rem",
      "5xl": "3rem",
      "6xl": "3.75rem",
      "7xl": "4.5rem",
      "8xl": "6rem",
      "9xl": "8rem",
    },
    justifyContent: [
      "stretch",
      "flex-start",
      "center",
      "flex-end",
      "space-around",
      "space-between",
    ],
    alignItems: ["stretch", "flex-start", "center", "flex-end"],
    paddingTop: vars.space,
    paddingBottom: vars.space,
    paddingLeft: vars.space,
    paddingRight: vars.space,
    marginTop: vars.space,
    marginBottom: vars.space,
    marginLeft: vars.space,
    marginRight: vars.space,
    boxShadow: vars.shadow,
    top: vars.space,
    left: vars.space,
    bottom: vars.space,
    right: vars.space,
    borderRadius: {
      none: "0px",
      sm: "0.125rem",
      DEFAULT: "0.25rem",
      md: "0.375rem",
      lg: "0.5rem",
      xl: "0.75rem",
      "2xl": "1rem",
      "3xl": "1.5rem",
      full: "9999px",
    },
    fontWeight: {
      thin: 100,
      extralight: 200,
      light: 300,
      normal: 400,
      medium: 500,
      semibold: 600,
      bold: 700,
      extrabold: 800,
      black: 900,
    },
    borderWidth: borderWidth,
    borderTopWidth: borderWidth,
    borderLeftWidth: borderWidth,
    borderRightWidth: borderWidth,
    borderBottomWidth: borderWidth,
    listStyleType: ['none', 'disc', 'decimal'],
    height: vars.space,
    width: vars.space,
    minHeight: {
      0: "0",
      full: "100%",
      screen: "100vh",
    },
    maxWidth: {
      none: "none",
      0: "0rem",
      xs: "20rem",
      sm: "24rem",
      md: "28rem",
      lg: "32rem",
      xl: "36rem",
      "2xl": "42rem",
      "3xl": "48rem",
      "4xl": "56rem",
      "5xl": "64rem",
      "6xl": "72rem",
      "7xl": "80rem",
      full: "100%",
      min: "min-content",
      max: "max-content",
      prose: "65ch",
    },
    inset: [0],
  },
  shorthands: {
    padding: ["paddingTop", "paddingBottom", "paddingLeft", "paddingRight"],
    paddingX: ["paddingLeft", "paddingRight"],
    paddingY: ["paddingTop", "paddingBottom"],
    margin: ["marginTop", "marginBottom", "marginLeft", "marginRight"],
    marginX: ["marginLeft", "marginRight"],
    marginY: ["marginTop", "marginBottom"],
    placeItems: ["justifyContent", "alignItems"],
  },
});

const colorStyles = createAtomicStyles({
  conditions: {
    default: {},
    darkMode: { "@media": "(prefers-color-scheme: dark)" },
    hover: { selector: "&:hover" },
    focus: { selector: "&:focus" },
  },
  defaultCondition: "default",
  properties: {
    color: vars.colors,
    borderColor: vars.colors,
    background: vars.colors,
  },
});

export const atoms = createAtomsFn(responsiveStyles, colorStyles);

// It's a good idea to export the Atoms type too
export type Atoms = Parameters<typeof atoms>[0];
